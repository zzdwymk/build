name: Kali Linux VM 自动构建（无KVM依赖）

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  ARCH: "amd64"
  BRANCH: "kali-last-snapshot"
  VARIANT: "vmware"
  FORMAT: "vmware"
  DESKTOP: "gnome"
  SIZE: "100"  
  TOOLSET: "default" 
  USER_PASS: "kali:kali"
  TIMEZONE: "Asia/Shanghai"
  OUTPUT_DIR: "artifacts"
  DEPLOY_DIR: "releases"

jobs:
  build:
    name: 构建 Kali VM 镜像
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
      - name: 拉取代码仓库
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: 安装构建依赖（无KVM版本）
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            debos \
            dosfstools \
            p7zip-full \
            qemu-utils \
            zerofree \
            git \
            curl \
            wget \
            unzip \
            docker.io
          sudo systemctl start docker
          sudo usermod -aG docker $USER
          # 验证QEMU安装
          qemu-system-x86_64 --version

      - name: 配置Debos使用软件模拟（不依赖KVM）
        run: |
          # 创建Debos配置文件，强制使用软件模拟
          mkdir -p ~/.config/debos
          cat > ~/.config/debos/config.yaml << EOF
          qemu:
            acceleration: none  # 禁用所有硬件加速
          EOF
          cat ~/.config/debos/config.yaml

      - name: 构建 Kali VM 镜像（软件模拟）
        run: |
          # 使用--disable-kvm参数禁用KVM加速
          ./build.sh \
            -a $ARCH \
            -b $BRANCH \
            -v $VARIANT \
            -f $FORMAT \
            -D $DESKTOP \
            -s $SIZE \
            -T $TOOLSET \
            -U $USER_PASS \
            -Z $TIMEZONE \
            --artifactdir $OUTPUT_DIR \
            --disable-kvm  # 关键参数：禁用KVM

          # 验证构建结果
          if [ -z "$(ls $OUTPUT_DIR/*.$FORMAT 2>/dev/null)" ]; then
            echo "❌ 镜像构建失败，未找到产物文件"
            exit 1
          else
            echo "✅ 镜像构建成功，产物列表："
            ls -lh $OUTPUT_DIR
          fi

      - name: 压缩镜像产物
        run: |
          mkdir -p $DEPLOY_DIR
          for file in $OUTPUT_DIR/*.$FORMAT; do
            filename=$(basename "$file")
            7z a -t7z "$DEPLOY_DIR/${filename}.7z" "$file" -mx=9
            echo "压缩完成：$DEPLOY_DIR/${filename}.7z"
          done
          cd $DEPLOY_DIR
          sha256sum * > SHA256SUMS
          cd ..

      - name: 上传产物到 GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kali-vm-images
          path: ${{ env.DEPLOY_DIR }}/*
          retention-days: 7

      - name: 创建 GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          name: "Kali VM 自动构建 ${{ github.sha }}"
          tag_name: "auto-build-${{ github.sha }}"
          body: |
            自动构建产物（基于 commit: ${{ github.sha }}）
            - 架构：${{ env.ARCH }}
            - 桌面环境：${{ env.DESKTOP }}
            - 格式：${{ env.FORMAT }}
          files: ${{ env.DEPLOY_DIR }}/*
          draft: false
          prerelease: true
